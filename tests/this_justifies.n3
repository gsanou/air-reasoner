# Believe this hides everything inside.  It appears to.

@prefix : <http://dig.csail.mit.edu/TAMI/2007/cwmrete/nonce#> .
@prefix air: <http://dig.csail.mit.edu/TAMI/2007/amord/air#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .

:JustifiesRulePolicy a air:Policy;
	air:rule :Rule1 , :Rule2 , :Rule3 , :Rule4 .

:Rule1 a air:Belief-rule ;
       air:label "Rule 1";
       air:if { @forSome :LOG, :RULE.
                this log:semantics :LOG .
                <./justifies_compliant_policy.n3> log:semantics :RULE .
                ((:LOG) (:RULE)) air:justifies { :nested_log air:compliant-with :nested_compliant_policy . } };
#       air:if { (1 2) math:sum 3 };
       air:then [ air:assert { :QComply air:compliant-with :JustifiesRulePolicy . } ] ;
       air:else [ air:assert { :QComply air:non-compliant-with :JustifiesRulePolicy . } ] .

:Rule2 a air:Belief-rule ;
       air:label "Rule 2";
       air:if { @forSome :LOG, :RULE.
                this log:semantics :LOG .
                <./justifies_non_compliant_policy.n3> log:semantics :RULE .
                ((:LOG) (:RULE)) air:justifies { :nested_log air:non-compliant-with :nested_non_compliant_policy . } };
#       air:if { (1 2) math:sum 3 };
       air:then [ air:assert { :QNonComply air:compliant-with :JustifiesRulePolicy . } ] ;
       air:else [ air:assert { :QNonComply air:non-compliant-with :JustifiesRulePolicy . } ] .

:Rule3 a air:Belief-rule ;
       air:label "Rule 3";
       air:if { @forSome :LOG, :RULE.
                this log:semantics :LOG .
                <./justifies_compliant_policy.n3> log:semantics :RULE .
                ((:LOG) (:RULE)) air:justifies { :nested_log air:non-compliant-with :nested_compliant_policy . } };
#       air:if { (1 2) math:sum 3 };
       air:then [ air:assert { :QFailComply air:non-compliant-with :JustifiesRulePolicy . } ] ;
       air:else [ air:assert { :QFailComply air:compliant-with :JustifiesRulePolicy . } ] .

:Rule4 a air:Belief-rule ;
       air:label "Rule 4";
       air:if { @forSome :LOG, :RULE.
                this log:semantics :LOG .
                <./justifies_non_compliant_policy.n3> log:semantics :RULE .
                ((:LOG) (:RULE)) air:justifies { :nested_log air:compliant-with :nested_non_compliant_policy . } };
#       air:if { (1 2) math:sum 3 };
       air:then [ air:assert { :QFailNonComply air:non-compliant-with :JustifiesRulePolicy . } ] ;
       air:else [ air:assert { :QFailNonComply air:compliant-with :JustifiesRulePolicy . } ] .

